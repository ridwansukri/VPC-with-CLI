aws ec2 create-vpc --cidr-block 10.0.0.0/16
{
    "Vpc": {
        "CidrBlock": "10.0.0.0/16",
        "DhcpOptionsId": "dopt-0e66fa7f1e8b42696",
        "State": "pending",
        "VpcId": "vpc-04c395139f0631145",
        "OwnerId": "672199935452",
        "InstanceTenancy": "default",
        "Ipv6CidrBlockAssociationSet": [],
        "CidrBlockAssociationSet": [
            {
                "AssociationId": "vpc-cidr-assoc-0ca50bbdbee87a010",
                "CidrBlock": "10.0.0.0/16",
                "CidrBlockState": {
                    "State": "associated"
                }
            }
        ],
        "IsDefault": false
    }
}

aws ec2 create-tags --resources vpc-04c395139f0631145 --tags Key=Name,Value=VPC-CLI

aws ec2 create-subnet --vpc-id vpc-04c395139f0631145 --cidr-block 10.0.0.0/24

{
    "Subnet": {
        "AvailabilityZone": "us-west-2c",
        "AvailabilityZoneId": "usw2-az3",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.0.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "available",
        "SubnetId": "subnet-01217cabcb8f62c8c",
        "VpcId": "vpc-04c395139f0631145",
        "OwnerId": "672199935452",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": [],
        "SubnetArn": "arn:aws:ec2:us-west-2:672199935452:subnet/subnet-01217cabcb8f62c8c",
        "EnableDns64": false,
        "Ipv6Native": false,
        "PrivateDnsNameOptionsOnLaunch": {
            "HostnameType": "ip-name",
            "EnableResourceNameDnsARecord": false,
            "EnableResourceNameDnsAAAARecord": false
        }
    }
}

aws ec2 create-tags --resources subnet-01217cabcb8f62c8c --tags Key=Name,Value=Public-Subnet-1


#Private subnet 1
aws ec2 create-subnet --vpc-id vpc-04c395139f0631145 --cidr-block 10.0.1.0/24
{
    "Subnet": {
        "AvailabilityZone": "us-west-2c",
        "AvailabilityZoneId": "usw2-az3",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.1.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "available",
        "SubnetId": "subnet-04efd3a5a9cf71606",
        "VpcId": "vpc-04c395139f0631145",
        "OwnerId": "672199935452",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": [],
        "SubnetArn": "arn:aws:ec2:us-west-2:672199935452:subnet/subnet-04efd3a5a9cf71606",
        "EnableDns64": false,
        "Ipv6Native": false,
        "PrivateDnsNameOptionsOnLaunch": {
            "HostnameType": "ip-name",
            "EnableResourceNameDnsARecord": false,
            "EnableResourceNameDnsAAAARecord": false
        }
    }
}
aws ec2 create-tags --resources subnet-04efd3a5a9cf71606 --tags Key=Name,Value=Private-Subnet-1

#public subnet 2
aws ec2 create-subnet --vpc-id vpc-04c395139f0631145 --cidr-block 10.0.2.0/24
{
    "Subnet": {
        "AvailabilityZone": "us-west-2c",
        "AvailabilityZoneId": "usw2-az3",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.2.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "available",
        "SubnetId": "subnet-0b4c9287e157e90b2",
        "VpcId": "vpc-04c395139f0631145",
        "OwnerId": "672199935452",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": [],
        "SubnetArn": "arn:aws:ec2:us-west-2:672199935452:subnet/subnet-0b4c9287e157e90b2",
        "EnableDns64": false,
        "Ipv6Native": false,
        "PrivateDnsNameOptionsOnLaunch": {
            "HostnameType": "ip-name",
            "EnableResourceNameDnsARecord": false,
            "EnableResourceNameDnsAAAARecord": false
        }
    }
}
aws ec2 create-tags --resources subnet-0b4c9287e157e90b2 --tags Key=Name,Value=Public-Subnet-2

#Private subnet 2 
aws ec2 create-subnet --vpc-id vpc-04c395139f0631145 --cidr-block 10.0.3.0/24
{
    "Subnet": {
        "AvailabilityZone": "us-west-2c",
        "AvailabilityZoneId": "usw2-az3",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.3.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "available",
        "SubnetId": "subnet-0b8eb1e7f04cfd223",
        "VpcId": "vpc-04c395139f0631145",
        "OwnerId": "672199935452",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": [],
        "SubnetArn": "arn:aws:ec2:us-west-2:672199935452:subnet/subnet-0b8eb1e7f04cfd223",
        "EnableDns64": false,
        "Ipv6Native": false,
        "PrivateDnsNameOptionsOnLaunch": {
            "HostnameType": "ip-name",
            "EnableResourceNameDnsARecord": false,
            "EnableResourceNameDnsAAAARecord": false
        }
    }
}
aws ec2 create-tags --resources subnet-0b8eb1e7f04cfd223 --tags Key=Name,Value=Private-Subnet-2





#IGW
aws ec2 create-internet-gateway
{
    "InternetGateway": {
        "Attachments": [],
        "InternetGatewayId": "igw-0aaeba7d4a31c2e34",
        "OwnerId": "672199935452",
        "Tags": []
    }
}

aws ec2 create-tags --resources igw-0aaeba7d4a31c2e34 --tags Key=Name,Value=IGW-CLI
aws ec2 attach-internet-gateway --internet-gateway-id igw-0aaeba7d4a31c2e34 --vpc-id vpc-04c395139f0631145
aws ec2 allocate-address --domain vpc
{
    "PublicIp": "44.231.39.252",
    "AllocationId": "eipalloc-0d4c438227a411d7b",
    "PublicIpv4Pool": "amazon",
    "NetworkBorderGroup": "us-west-2",
    "Domain": "vpc"
}

Create a Nat-gateway and place it in the public Subnet1:
aws ec2 create-nat-gateway --subnet-id subnet-04efd3a5a9cf71606 --allocation-id eipalloc-0d4c438227a411d7b
{
    "ClientToken": "6f5ad494-a73b-4305-849d-2ce9d25a668c",
    "NatGateway": {
        "CreateTime": "2023-01-14T23:44:06+00:00",
        "NatGatewayAddresses": [
            {
                "AllocationId": "eipalloc-0d4c438227a411d7b"
            }
        ],
        "NatGatewayId": "nat-09af5070e386d3f69",
        "State": "pending",
        "SubnetId": "subnet-04efd3a5a9cf71606",
        "VpcId": "vpc-04c395139f0631145",
        "ConnectivityType": "public"
    }
}


aws ec2 create-tags --resources nat-09af5070e386d3f69 --tags Key=Name,Value=NAT-Subnet-1

# Create Route Table 1 for public Subnet:

aws ec2 create-route-table --vpc-id vpc-04c395139f0631145
{
    "RouteTable": {
        "Associations": [],
        "PropagatingVgws": [],
        "RouteTableId": "rtb-01d3f0d3a10de3525",
        "Routes": [
            {
                "DestinationCidrBlock": "10.0.0.0/16",
                "GatewayId": "local",
                "Origin": "CreateRouteTable",
                "State": "active"
            }
        ],
        "Tags": [],
        "VpcId": "vpc-04c395139f0631145",
        "OwnerId": "672199935452"
    }
}
# Tag
aws ec2 create-tags --resources rtb-01d3f0d3a10de3525 --tags Key=Name,Value=Public-Route-Table


# Create Route Table  for private Subnet:

aws ec2 create-route-table --vpc-id vpc-04c395139f0631145

{
    "RouteTable": {
        "Associations": [],
        "PropagatingVgws": [],
        "RouteTableId": "rtb-0ad6d65b0c79da09a",
        "Routes": [
            {
                "DestinationCidrBlock": "10.0.0.0/16",
                "GatewayId": "local",
                "Origin": "CreateRouteTable",
                "State": "active"
            }
        ],
        "Tags": [],
        "VpcId": "vpc-04c395139f0631145",
        "OwnerId": "672199935452"
    }
}

#Tag:

aws ec2 create-tags --resources rtb-0ad6d65b0c79da09a --tags Key=Name,Value=Private-Route-Table



Create a route to the internet in Public Route Table:

aws ec2 create-route --route-table-id rtb-01d3f0d3a10de3525 --destination-cidr-block 0.0.0.0/0 --gateway-id igw-0aaeba7d4a31c2e34
{
    "Return": true
}


Create a route to the internet in Route Table 2 via Nat:

aws ec2 create-route --route-table-id rtb-0ad6d65b0c79da09a --destination-cidr-block 0.0.0.0/0 --gateway-id nat-09af5070e386d3f69
{
    "Return": true
}


Associate Public Route Table to Public Subnet 1 :

aws ec2 associate-route-table --route-table-id rtb-01d3f0d3a10de3525 --subnet-id subnet-01217cabcb8f62c8c

{
    "AssociationId": "rtbassoc-08ef2cc669e9fc636",
    "AssociationState": {
        "State": "associated"
    }
}

Associate Public Route Table to Public Subnet 2 :

aws ec2 associate-route-table --route-table-id rtb-01d3f0d3a10de3525 --subnet-id subnet-0b4c9287e157e90b2
{
    "AssociationId": "rtbassoc-04fbc48dd8df49ae0",
    "AssociationState": {
        "State": "associated"
    }
}


Associate Private Route Table to Private Subnet 1 :
aws ec2 associate-route-table --route-table-id rtb-0ad6d65b0c79da09a --subnet-id subnet-04efd3a5a9cf71606
{
    "AssociationId": "rtbassoc-0b9e868b81ffc8425",
    "AssociationState": {
        "State": "associated"
    }
}


# Security Group
aws ec2 create-security-group --group-name Web-Security-Group --description "Enable HTTP Access" --vpc-id vpc-04c395139f0631145
{
    "GroupId": "sg-04e0dc278f0314de8"
}


aws ec2 authorize-security-group-ingress \
    --group-id sg-04e0dc278f0314de8 \
    --protocol tcp \
    --port 80 \
    --cidr 0.0.0.0/0
    
 {
    "Return": true,
    "SecurityGroupRules": [
        {
            "SecurityGroupRuleId": "sgr-0d93b4ff227fa66cf",
            "GroupId": "sg-04e0dc278f0314de8",
            "GroupOwnerId": "672199935452",
            "IsEgress": false,
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIpv4": "0.0.0.0/0"
        }
    ]
}

Create Key Pair and copy the key part and write it to a file MyKeyPairCLI.pem :

aws ec2 create-key-pair --key-name keypairCLI.pem
{
    "KeyFingerprint": "e2:42:02:6d:19:5b:09:cc:de:65:62:28:2c:32:ab:56:da:44:05:a2",
    "KeyMaterial": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAjZBLLh3jePk0EWUckDr+FlNdPKh8j4PggWHeXjOx+sWMm5lj\nwFPImeDBvMhKT5MeebaX87H9m8DMdEXxAz/fGVUGKFKOigrBchAfMFdpnOtKTqP8\nR0V3D+9wMWQGUd4J3CBCcgBzRn8zBuzgq2lvvu+aoiRRt6nHjFmUExHTKM4veIbc\nf8mDQgVi+LTc9XtDkoQoAeeCq+nx0vZl6/+gc2dH9FXOof4HgWyuvxybixV3ELsk\nV5JWg+Ec8nMH4csLgjM9zbJrpC36hdxOJGKLi89CMpCd5nHpsnJqg3RAu3DOnU1M\nB6QEsAU9XeDtoAEem7r3QNBLQV2Hl9gqjdZ7vwIDAQABAoIBAFxozfrLvfrxSkD0\nrSGlsMmoH5wCLFWO89XhqkP6IPufS3sjNU+OIcv5QN7YLFInqmQvgp+tF+09fPmF\n0p+ZaSxjKULXKX8JKGAqEAIBfcrWeUo+l+d6fA9l8On87ncwp2UPlfBPRPDHBetG\nZB7hE/Yi+OFRLhrjdIS00QllwF7IyO/X7v2qkChWR22zpRz4T/qUr5+MqFCy0aft\nL4wLrz2vUU7zPYQxmQlkTw5x3dFWbjR8PRjYMag75mSR5ijtzvRsPGCfouqPhNpn\njgkAlMGLXgJw8KQCaEFRpiOKUXM9Cd0UpdMGqp/+gye2j6BNDUer1vn3N9SxGhas\nzPJtTLECgYEAwrGBhbKA4ySULzYaNjaaq4SLVnxh9SSbtIVXsuqayMz//xIIfCjx\nLMNoFTgvsnWzwFjIfI8t2qgwcvk+rh6A7XPwUA3NZd5/a5qj+czJt0OQsyuVhvte\naEtlCOXlkB1c5f03aXHBS02I4RZEcmAGdtNGqQHLxOstuZEBcHYdzGcCgYEAuiPt\nvUMAv0Mbz/pI0l1zKNZVxap6GziAgjXH3z/fANjvSEWjeHNSp/HG9lJmDeVJfk7n\nF0UAODBdqBkAZLuEO/+Cg/jNUqQabcGTP0gBTHmx8z3rfqyuXOhxsZobnkqQCJEo\njj5TSN1AggmF+UXmMVgUqoISpGOAX8wkiecFvukCgYBbr5ouayy1S1GZliHr6/UU\n1tuDhBnhhzboYW82a7Mu4xOffE+QoPtKuE84xvf3U+StrWHk/sx6T4BZdLUm7GiM\n6m9+U7Gpyok5FF8qUV2hN2laZykIozIHbZIMCa/9GUbZbFD/EDoWC1Jtpb3gGwaQ\nSNja2GSsvJAQ9o+19Xn8+wKBgQCBAlHNsNidtvdZyBAcrOQZ06OS4jrLDvgSRxAG\nLRB0V+ZP4uQPoW4SNEI/ipBs5RNw1WLY/9vNFchzrxBUwJo/szFUIma79jzTASz6\n2P79cALjoXDMVQZsIjZab4LgzLDTHzhKjevPPnltJwiR4d5PKMr5+jjNcqEQxD42\nzcVvsQKBgDdR0baz0RJCAlc7Xz6PtUxO4F740stwP1MHsvG7oxagI+NT7AgWvULm\neljzTQwzJFpWkUTpb0sG1cTgULwjocxZyljWGCE5yHTDBfBFCe2uPSqZ5UXnR7fu\nKtnNn2u1y6g+inM6+gMM5fF1NiXn34GQQJCc0FmkR4AeWI7IS5Is\n-----END RSA PRIVATE KEY-----",
    "KeyName": "keypairCLI.pem",
    "KeyPairId": "key-087b37415d85f9919"
}

# Create EC2
ami-0b5eea76982371e91 Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type (64-bit (x86)) 

aws ec2 run-instances \
    --image-id ami-0ceecbb0f30a902a6\
    --instance-type t2.micro \
    --subnet-id subnet-0b4c9287e157e90b2 \
    --security-group-ids sg-04e0dc278f0314de8 \
    --associate-public-ip-address \
    --key-name keypairCLI



{
    "Groups": [],
    "Instances": [
        {
            "AmiLaunchIndex": 0,
            "ImageId": "ami-0ceecbb0f30a902a6",
            "InstanceId": "i-0836b0bfc1a1751db",
            "InstanceType": "t2.micro",
            "KeyName": "keypairCLI",
            "LaunchTime": "2023-01-15T00:58:39+00:00",
            "Monitoring": {
                "State": "disabled"
            },
            "Placement": {
                "AvailabilityZone": "us-west-2c",
                "GroupName": "",
                "Tenancy": "default"
            },
            "PrivateDnsName": "ip-10-0-2-88.us-west-2.compute.internal",
            "PrivateIpAddress": "10.0.2.88",
            "ProductCodes": [],
            "PublicDnsName": "",
            "State": {
                "Code": 0,
                "Name": "pending"
            },
            "StateTransitionReason": "",
            "SubnetId": "subnet-0b4c9287e157e90b2",
            "VpcId": "vpc-04c395139f0631145",
            "Architecture": "x86_64",
            "BlockDeviceMappings": [],
            "ClientToken": "2809ec24-432a-4e61-8653-cd6be89119d4",
            "EbsOptimized": false,
            "EnaSupport": true,
            "Hypervisor": "xen",
            "NetworkInterfaces": [
                {
                    "Attachment": {
                        "AttachTime": "2023-01-15T00:58:39+00:00",
:



